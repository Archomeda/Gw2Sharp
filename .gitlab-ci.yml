image: mcr.microsoft.com/dotnet/core/sdk:3.0

variables:
  CONFIGURATION: Release

stages:
  - versioning
  - build
  - test
  - pack
  - deploy

.task:
  except:
    - gh-pages

.task-with-doc:
  extends: .task
  before_script:
    - apt update
    - apt install -y software-properties-common wget
    - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
    - dpkg -i packages-microsoft-prod.deb
    - apt-get install -y apt-transport-https
    - add-apt-repository "deb http://archive.ubuntu.com/ubuntu bionic universe"
    - apt-get update
    - apt-get install -y aspnetcore-runtime-2.1
    - dotnet tool install -g InheritDocTool
    - export PATH="$PATH:/root/.dotnet/tools"

versioning:
  extends: .task
  stage: versioning
  image: docker:stable
  services:
    - docker:dind
  script: docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.0.0-linux /repo /updateassemblyinfo Gw2Sharp/Properties/AssemblyVersionInfo.cs /ensureassemblyinfo
  artifacts:
    paths:
      - Gw2Sharp/Properties/AssemblyVersionInfo.cs
    expire_in: 1 day

build:binaries:
  extends: .task-with-doc
  stage: build
  dependencies:
    - versioning
  script:
    - dotnet build Gw2Sharp -c $CONFIGURATION -o bin
    - InheritDoc
  artifacts:
    paths:
      - bin/
    expire_in: 1 month

build:docs:
  extends: .task
  stage: build
  image: mono
  before_script:
    - apt update
    - apt install -y wget unzip
  script:
    - wget -q https://github.com/dotnet/docfx/releases/latest/download/docfx.zip
    - unzip docfx.zip
    - mono docfx.exe Gw2Sharp.DocFX/docfx.json
    - mv Gw2Sharp.DocFX/_site doc
  artifacts:
    paths:
      - doc/
    expire_in: 1 month

test:
  extends: .task
  stage: test
  script: dotnet test Gw2Sharp.Tests -c $CONFIGURATION

pack:
  # TODO: Make this autoversioned
  extends: .task-with-doc
  stage: pack
  script: 
    - dotnet build Gw2Sharp -c $CONFIGURATION
    - InheritDoc
    - dotnet pack Gw2Sharp -c $CONFIGURATION --no-build --include-symbols -o pack
  artifacts:
    paths:
      - pack/
    expire_in: 1 month

deploy:docs:
  extends: .task
  stage: deploy
  image: ubuntu
  dependencies:
    - build:docs
  only:
    - master
    - tags
  before_script:
    - apt update
    - apt install -y git
  script:
    - git config --global credential.helper store
    - git config --global user.name $GITLAB_USER_NAME
    - git config --global user.email $GITLAB_USER_EMAIL
    - git clone https://${GITHUB_PAGES_TOKEN}@github.com/Archomeda/Gw2Sharp.git --branch gh-pages repo_doc
    - mkdir -p repo_doc/${CI_COMMIT_REF_NAME}
    - cp -rf doc/* repo_doc/${CI_COMMIT_REF_NAME}
    - cd repo_doc
    - git add -A
    - |
      if [[ `git status --porcelain` ]]; then
        git commit -m "Update documentation for ${CI_COMMIT_REF_NAME} (${CI_COMMIT_SHORT_SHA})"
        git push origin gh-pages
      fi

deploy:github:
  extends: .task
  stage: deploy
  image: ubuntu
  dependencies:
    - build:binaries
    - pack
  only:
    - tags
  before_script:
    - apt update
    - apt install -y tar wget zip
  script:
    - wget -q https://github.com/tcnksm/ghr/releases/download/v0.12.1/ghr_v0.12.1_linux_amd64.tar.gz
    - tar -zxf ghr_v0.12.1_linux_amd64.tar.gz
    - mv ghr_v0.12.1_linux_amd64/ghr ./
    - mkdir artifacts
    - zip -r artifacts/Gw2Sharp.zip bin/*
    - cp pack/* artifacts/
    - ./ghr -t ${GITHUB_RELEASE_TOKEN} -u Archomeda -r Gw2Sharp -n ${CI_COMMIT_REF_NAME} -draft ${CI_COMMIT_REF_NAME} artifacts

.deploy:nuget:
  # TODO
  extends: .task
  stage: deploy
  image: ubuntu
  dependencies:
    - pack
  only:
    - tags
