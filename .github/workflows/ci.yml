name: CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - v*
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        dotnet:
          - netcoreapp3.1
          - netcoreapp2.1
          - net461
        exclude:
          - os: ubuntu-latest
            dotnet: net461
    steps:
      - uses: actions/checkout@v2
      - name: Run dotnet test
        run: dotnet test -c Release -f ${{ matrix.dotnet }}

  nightly:
    name: Nightly
    runs-on: windows-latest
    needs: [test]
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install InheritDocTool
        shell: powershell
        run: dotnet tool install --global InheritDocTool
      - name: Patch nightly version
        shell: powershell
        run: |
          $version = GitVersion /output json /updateassemblyinfo Gw2Sharp/Properties/AssemblyVersionInfo.cs /ensureassemblyinfo
          Write-Output $version
          $version = $version | ConvertFrom-Json
          $nuget = $version.SemVer
          Write-Output "Assembly version: $($version.AssemblySemVer)"
          Write-Output "Assembly file version: $($version.AssemblySemFileVer)"
          Write-Output "Informational version: $($version.InformationalVersion)"
          Write-Output "NuGet version: $nuget"
          echo "::set-env name=VERSION::$nuget"
      - name: Run dotnet build
        run: dotnet build -c Release -p:VERSIONED_BUILD=$env:VERSION
      - name: Run InheritDocTool
        shell: powershell
        run: InheritDoc -o
      - name: Run dotnet pack
        run: dotnet pack Gw2Sharp -c Release --no-build -p:VERSIONED_BUILD=$env:VERSION
      - name: Run dotnet nuget push
        run: |
          dotnet nuget add source https://pkgs.dev.azure.com/Archomeda/Gw2Sharp/_packaging/Nightly/nuget/v3/index.json -n AzureDevOps -u github-actions -p "${{ secrets.DEVOPS_TOKEN }}"
          dotnet nuget push **/*.symbols.nupkg -s AzureDevOps -k "${{ secrets.DEVOPS_TOKEN }}"
