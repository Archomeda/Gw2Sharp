name: SonarCloud

on: [push]

jobs:
  sonarcloud:
    name: SonarCloud analysis
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        dotnet:
          - "3.1.102"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-dotnet@v1
        name: Install .NET Core ${{ matrix.dotnet }}
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Install Coverlet
        run: dotnet tool install --global coverlet.console
      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Start SonarScanner
        shell: powershell
        run: |
          if ($env:GITHUB_REF -match "refs/([^/]*)/(.*)") {
            if ($matches[1] -eq "tags") {
              dotnet sonarscanner begin /k:"Archomeda_Gw2Sharp" /o:"archomeda-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="coverage.xml" /v:"$($matches[2])"
            } elseif ($matches[1] -eq "heads") {
              dotnet sonarscanner begin /k:"Archomeda_Gw2Sharp" /o:"archomeda-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="coverage.xml" /d:sonar.branch.name="$($matches[2])"
            } else {
              Write-Error "No valid ref found in $env:GITHUB_REF"
              exit 1
            }
          } else {
            Write-Error "No valid ref found in $env:GITHUB_REF"
            exit 1
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run dotnet build
        run: dotnet build -c Debug
      - name: Run Coverlet
        run: coverlet Gw2Sharp.Tests/bin/Debug/netcoreapp3.0/Gw2Sharp.Tests.dll --target "dotnet.exe" --targetargs "test -c Debug --no-build" --format opencover --output "coverage.xml"
      - name: End SonarScanner
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
